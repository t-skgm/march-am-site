---
import type { GetStaticPaths, Page } from 'astro'
import { cleanPathParam } from '../../../../utils/cleanPathParam'
import { calcFirstPage, normalizeTag } from '../../../../infra/contentful/common'
import { configs } from '../../../../constants/site'
import type { Article } from '../../../../infra/contentful/interfaces'
import { fetchArticleCategories, fetchArticleEntries } from '../../../../infra/contentful/article'
import CategoryPage from '../../../../components/CategoryPage.astro'
import Bluebird from 'bluebird'

export const getStaticPaths: GetStaticPaths = async () => {
  const entries = await fetchArticleEntries()
  const uniqCategories = await fetchArticleCategories()

  return Bluebird.map(uniqCategories, async (_category) => {
    const category = cleanPathParam(_category)

    const categorygedEntries = entries.filter((e) => normalizeTag(e.category) === category)

    const page = await calcFirstPage({
      entries: categorygedEntries,
      pageSize: configs.paginateSize
    })

    return { params: { category }, props: { page } }
  })
}

type Props = {
  page: Page<Article>
}

const { page } = Astro.props
---

<CategoryPage page={page} isIndexPage />
