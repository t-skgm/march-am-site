---
import CategoryPage from './[page].astro'
import { BlogEntry, getBlogCategories, getBlogCollection } from '../../../../utils/collection/blog'
import type { GetStaticPaths, Page } from 'astro'
import { cleanPathParam } from '../../../../utils/cleanPathParam'
import { calcFirstPage, normalizeTag } from '../../../../utils/collection/common'
import { configs } from '../../../../constants/site'

export const getStaticPaths: GetStaticPaths = async () => {
  const entries = await getBlogCollection()
  const uniqCategories = await getBlogCategories()

  return uniqCategories.map((_category) => {
    const category = cleanPathParam(_category)

    const categorygedEntries = entries.filter((e) => normalizeTag(e.data.category) === category)
    const page = calcFirstPage({
      entries: categorygedEntries,
      pageSize: configs.paginateSize
    })

    return { params: { category }, props: { page } }
  })
}

type Props = {
  page: Page<BlogEntry>
}

const { page } = Astro.props
---

<CategoryPage isIndexPage page={page} />
