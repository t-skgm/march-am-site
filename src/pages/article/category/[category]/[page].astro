---
import type { GetStaticPaths, Page } from 'astro'
import { cleanPathParam } from '../../../../utils/cleanPathParam'
import { configs } from '../../../../constants/site'
import { normalizeTag } from '../../../../infra/contentful/common'
import type { Article } from '../../../../infra/contentful/interfaces'
import { fetchArticleCategories, fetchArticleEntries } from '../../../../infra/contentful/article'
import CategoryPage from '../../../../components/CategoryPage.astro'
import '../../../../styles/global.css'

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  const entries = await fetchArticleEntries()
  const uniqCategories = await fetchArticleCategories()

  return uniqCategories.flatMap((category) => {
    const taggedEntries = entries.filter((e) => normalizeTag(e.category) === category)
    const safeCategory = cleanPathParam(category)

    return paginate(taggedEntries, {
      params: { category: safeCategory },
      pageSize: configs.paginateSize
    })
  })
}

export type Props = {
  page: Page<Article>
}

const { page } = Astro.props
---

<CategoryPage page={page} />
