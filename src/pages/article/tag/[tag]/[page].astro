---
import type { GetStaticPaths, Page } from 'astro'
import { cleanPathParam } from '../../../../utils/cleanPathParam'
import { configs } from '../../../../constants/site'
import { normalizeTag } from '../../../../infra/contentful/common'
import { fetchArticleEntries, fetchArticleTags } from '../../../../infra/contentful/article'
import type { Article } from '../../../../infra/contentful/interfaces'
import TagPage from '../../../../components/TagPage.astro'

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  const entries = await fetchArticleEntries()
  const uniqTags = await fetchArticleTags()

  return uniqTags.flatMap((tag) => {
    const taggedEntries = entries.filter((e) => (e.tags ?? []).map(normalizeTag).includes(tag))
    const safeTag = cleanPathParam(tag)

    return paginate(taggedEntries, {
      params: { tag: safeTag },
      pageSize: configs.paginateSize
    })
  })
}

export type Props = {
  page: Page<Article>
}
const { page } = Astro.props
---

<TagPage page={page} />
