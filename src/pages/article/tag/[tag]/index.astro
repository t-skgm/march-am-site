---
import TagPage from './[page].astro'
import type { GetStaticPaths, Page } from 'astro'
import { cleanPathParam } from '../../../../utils/cleanPathParam'
import { calcFirstPage, normalizeTag } from '../../../../utils/collection/common'
import { configs } from '../../../../constants/site'
import type { ArticleEntry } from '../../../../infra/contentful/article'
import { fetchArticleEntries, fetchArticleTags } from '../../../../infra/contentful/article'

export const getStaticPaths: GetStaticPaths = async () => {
  const entries = await fetchArticleEntries()
  const uniqTags = await fetchArticleTags()

  return uniqTags.map((_tag) => {
    const tag = cleanPathParam(_tag)

    const taggedEntries = entries.filter((e) => (e.tags ?? []).map(normalizeTag).includes(_tag))
    const page = calcFirstPage({
      entries: taggedEntries,
      pageSize: configs.paginateSize
    })

    return { params: { tag }, props: { page } }
  })
}

type Props = {
  page: Page<ArticleEntry>
}

const { page } = Astro.props
---

<TagPage isIndexPage page={page} />
